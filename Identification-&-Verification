<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Identification and Verification</title>
    <style>
        :root {
            --primary: #1e37c4;
            --primary-blue: #2759c5;
            --primary-dark: #013193;
            --accent: #3771c9;
            --light-blue: #e0f0ff;
            --border-color: #bfdbfe;
            --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
            --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            --hover-shadow: 0 15px 35px rgba(0, 0, 0, 0.12);
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
        
        @keyframes ripple {
            0% { transform: scale(0); opacity: 1; }
            100% { transform: scale(4); opacity: 0; }
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-5px); }
        }
        
        body {
            font-family: 'Segoe UI', Roboto, sans-serif;
            background-color: #f8fafc;
            margin: 0;
            padding: 20px;
            color: #1e293b;
        }
        
        .verification-container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 16px;
            box-shadow: var(--card-shadow);
            overflow: hidden;
            position: relative;
            transform: translateY(20px);
            opacity: 0;
            animation: fadeIn 0.6s cubic-bezier(0.22, 1, 0.36, 1) forwards;
        }
        
        .header {
            background: linear-gradient(135deg, var(--primary-blue) 0%, var(--primary-dark) 100%);
            color: white;
            padding: 25px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        
        .header::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.15) 0%, transparent 70%);
            transform: rotate(30deg);
        }
        
        .back-btn {
            position: absolute;
            left: 20px;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(255,255,255,0.2);
            border: none;
            color: white;
            width: 42px;
            height: 42px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: var(--transition);
            z-index: 1;
        }
        
        .back-btn:hover {
            background: rgba(255,255,255,0.3);
            transform: translateY(-50%) scale(1.1);
        }
        
        .header h1 {
            margin: 0;
            font-size: 1.8rem;
            font-weight: 600;
            position: relative;
            text-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .section {
            padding: 25px;
            border-bottom: 1px solid var(--border-color);
            opacity: 0;
            transform: translateY(10px);
            animation: fadeIn 0.5s ease-out forwards;
        }
        
        .section:nth-child(2) { animation-delay: 0.1s; }
        .section:nth-child(3) { animation-delay: 0.2s; }
        .section:nth-child(4) { animation-delay: 0.3s; }
        .section:nth-child(5) { animation-delay: 0.4s; }
        
        .section-title {
            color: var(--primary-blue);
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .section-title i {
            font-size: 1.4rem;
        }
        
        .upload-area {
            border: 2px dashed var(--border-color);
            border-radius: 12px;
            padding: 30px;
            text-align: center;
            margin-bottom: 20px;
            background-color: var(--light-blue);
            transition: var(--transition);
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }
        
        .upload-area:hover {
            border-color: var(--primary-blue);
            background-color: rgba(37, 99, 235, 0.05);
            transform: translateY(-3px);
            box-shadow: var(--hover-shadow);
        }
        
        .upload-icon {
            font-size: 2.8rem;
            color: var(--primary-blue);
            margin-bottom: 15px;
            transition: var(--transition);
            animation: float 3s ease-in-out infinite;
        }
        
        .upload-area:hover .upload-icon {
            transform: scale(1.1);
            animation: none;
        }
        
        .upload-text {
            color: var(--primary-blue);
            font-weight: 600;
            margin-bottom: 8px;
            font-size: 1.1rem;
            transition: var(--transition);
        }
        
        .upload-subtext {
            color: #64748b;
            font-size: 0.9rem;
            transition: var(--transition);
        }
        
        .upload-area:hover .upload-text {
            color: var(--primary-dark);
        }
        
        .preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 20px;
        }
        
        .preview-box {
            width: calc(50% - 10px);
            position: relative;
            border: 1px solid var(--border-color);
            border-radius: 12px;
            overflow: hidden;
            transform: scale(1);
            transition: var(--transition);
            box-shadow: 0 4px 8px rgba(0,0,0,0.05);
        }
        
        .preview-box:hover {
            transform: scale(1.02);
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        }
        
        .preview-image {
            width: 100%;
            height: 200px;
            object-fit: contain;
            background-color: #f1f5f9;
        }
        
        .edit-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0,0,0,0.7);
            color: white;
            padding: 10px;
            text-align: center;
            cursor: pointer;
            transition: var(--transition);
        }
        
        .edit-overlay:hover {
            background: rgba(0,0,0,0.8);
        }
        
        .edit-overlay i {
            margin-right: 8px;
        }
        
        .input-field {
            margin-bottom: 20px;
            position: relative;
        }
        
        .input-field label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #334155;
        }
        
        .input-field input {
            width: 100%;
            padding: 14px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            font-size: 1rem;
            transition: var(--transition);
        }
        
        .input-field input:focus {
            outline: none;
            border-color: var(--primary-blue);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            transform: translateY(-1px);
        }
        
        .btn-group {
            display: flex;
            justify-content: space-between;
            padding: 25px;
            border-top: 1px solid var(--border-color);
            background: linear-gradient(to right, rgba(248, 250, 252, 0.8), rgba(248, 250, 252, 0.9));
        }
        
        .btn {
            padding: 14px 28px;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
            min-width: 180px;
        }
        
        .btn i {
            margin-right: 10px;
            transition: var(--transition);
        }
        
        .btn-cancel {
            background-color: #f1f5f9;
            color: #64748b;
            box-shadow: 0 4px 8px rgba(0,0,0,0.05);
        }
        
        .btn-cancel:hover {
            background-color: #e2e8f0;
            color: #475569;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        }
        
        .btn-cancel:hover i {
            transform: translateX(-3px);
        }
        
        .btn-submit {
            background: linear-gradient(135deg, var(--primary-blue) 0%, var(--primary-dark) 100%);
            color: white;
            box-shadow: 0 4px 12px rgba(39, 89, 197, 0.3);
        }
        
        .btn-submit:hover {
            background: linear-gradient(135deg, var(--primary-dark) 0%, var(--primary-blue) 100%);
            transform: translateY(-2px);
            box-shadow: 0 8px 16px rgba(39, 89, 197, 0.4);
            animation: pulse 1.5s infinite;
        }
        
        .btn-submit:hover i {
            transform: translateX(3px);
        }
        
        input[type="file"] {
            display: none;
        }
        
        .ripple-effect {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.4);
            transform: scale(0);
            animation: ripple 0.6s linear;
            pointer-events: none;
        }
        
        .progress-bar {
            height: 4px;
            background: var(--border-color);
            border-radius: 2px;
            margin-top: 15px;
            overflow: hidden;
            display: none;
        }
        
        .progress-fill {
            height: 100%;
            width: 0;
            background: linear-gradient(90deg, var(--primary-blue), var(--accent));
            transition: width 0.6s ease;
        }
        
        .success-message {
            display: none;
            background: rgba(16, 185, 129, 0.1);
            color: #065f46;
            padding: 12px;
            border-radius: 8px;
            margin-top: 15px;
            text-align: center;
            font-weight: 500;
            animation: fadeIn 0.5s ease-out;
        }
        
        .success-message i {
            margin-right: 8px;
            color: #10b981;
        }
        
        @media (max-width: 768px) {
            .preview-box {
                width: 100%;
            }
            
            .btn-group {
                flex-direction: column;
                gap: 15px;
            }
            
            .btn {
                width: 100%;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body>
    <div class="verification-container">
        <div class="header">
            <button class="back-btn" id="backButton">
                <i class="fas fa-arrow-left"></i>
            </button>
            <h1>Identification and Verification</h1>
        </div>
        
        <div class="section">
            <div class="section-title">
                <i class="fas fa-id-card"></i>
                Permit/Placard Number
            </div>
            <div class="input-field">
                <label for="permit-number">Enter Permit/Placard Number</label>
                <input type="text" id="permit-number" placeholder="e.g. ABC123456">
            </div>
        </div>
        
        <div class="section">
            <div class="section-title">
                <i class="fas fa-camera"></i>
                Front of permit/placard
            </div>
            <label for="front-upload">
                <div class="upload-area" id="front-upload-area">
                    <div class="upload-icon">
                        <i class="fas fa-cloud-upload-alt"></i>
                    </div>
                    <div class="upload-text">Click to upload front photo</div>
                    <div class="upload-subtext">JPG, PNG, or PDF (Max 5MB)</div>
                </div>
            </label>
            <input type="file" id="front-upload" accept="image/*,.pdf">
            
            <div class="progress-bar" id="front-progress">
                <div class="progress-fill"></div>
            </div>
            <div class="success-message" id="front-success">
                <i class="fas fa-check-circle"></i> Front photo uploaded successfully!
            </div>
            
            <div class="preview-container" id="front-preview">
                <!-- Preview will appear here after upload -->
            </div>
        </div>
        
        <div class="section">
            <div class="section-title">
                <i class="fas fa-camera"></i>
                Back of permit/placard
            </div>
            <label for="back-upload">
                <div class="upload-area" id="back-upload-area">
                    <div class="upload-icon">
                        <i class="fas fa-cloud-upload-alt"></i>
                    </div>
                    <div class="upload-text">Click to upload back photo</div>
                    <div class="upload-subtext">JPG, PNG, or PDF (Max 5MB)</div>
                </div>
            </label>
            <input type="file" id="back-upload" accept="image/*,.pdf">
            
            <div class="progress-bar" id="back-progress">
                <div class="progress-fill"></div>
            </div>
            <div class="success-message" id="back-success">
                <i class="fas fa-check-circle"></i> Back photo uploaded successfully!
            </div>
            
            <div class="preview-container" id="back-preview">
                <!-- Preview will appear here after upload -->
            </div>
        </div>
        
        <div class="section">
            <div class="section-title">
                <i class="fas fa-file-medical"></i>
                Medical Document
            </div>
            <label for="medical-upload">
                <div class="upload-area" id="medical-upload-area">
                    <div class="upload-icon">
                        <i class="fas fa-file-medical"></i>
                    </div>
                    <div class="upload-text">Click to upload medical document</div>
                    <div class="upload-subtext">JPG, PNG, or PDF (Max 5MB)</div>
                </div>
            </label>
            <input type="file" id="medical-upload" accept="image/*,.pdf">
            
            <div class="progress-bar" id="medical-progress">
                <div class="progress-fill"></div>
            </div>
            <div class="success-message" id="medical-success">
                <i class="fas fa-check-circle"></i> Medical document uploaded successfully!
            </div>
            
            <div class="preview-container" id="medical-preview">
                <!-- Preview will appear here after upload -->
            </div>
        </div>
        
        <div class="section">
            <div class="section-title">
                <i class="fas fa-file-medical-alt"></i>
                Medical Report
            </div>
            <label for="report-upload">
                <div class="upload-area" id="report-upload-area">
                    <div class="upload-icon">
                        <i class="fas fa-file-medical-alt"></i>
                    </div>
                    <div class="upload-text">Click to upload medical report</div>
                    <div class="upload-subtext">JPG, PNG, or PDF (Max 5MB)</div>
                </div>
            </label>
            <input type="file" id="report-upload" accept="image/*,.pdf">
            
            <div class="progress-bar" id="report-progress">
                <div class="progress-fill"></div>
            </div>
            <div class="success-message" id="report-success">
                <i class="fas fa-check-circle"></i> Medical report uploaded successfully!
            </div>
            
            <div class="preview-container" id="report-preview">
                <!-- Preview will appear here after upload -->
            </div>
        </div>
        
        <div class="btn-group">
            <button class="btn btn-cancel" id="exitButton">
                <i class="fas fa-times"></i> Exit
            </button>
            <button class="btn btn-submit" id="submitButton">
                <i class="fas fa-check"></i> Submit Verification
            </button>
        </div>
    </div>

    <script>
        // Create ripple effect on buttons
        function createRipple(event) {
            const button = event.currentTarget;
            const circle = document.createElement("span");
            const diameter = Math.max(button.clientWidth, button.clientHeight);
            const radius = diameter / 2;
            
            circle.style.width = circle.style.height = `${diameter}px`;
            circle.style.left = `${event.clientX - button.getBoundingClientRect().left - radius}px`;
            circle.style.top = `${event.clientY - button.getBoundingClientRect().top - radius}px`;
            circle.classList.add("ripple-effect");
            
            const ripple = button.getElementsByClassName("ripple-effect")[0];
            if (ripple) ripple.remove();
            
            button.appendChild(circle);
        }
        
        // Add ripple effect to all buttons
        document.querySelectorAll('.btn, .back-btn, .upload-area').forEach(button => {
            button.addEventListener('click', createRipple);
        });
        
        // Handle file uploads and previews with simulated progress
        document.querySelectorAll('input[type="file"]').forEach(input => {
            input.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (!file) return;
                
                const previewId = this.id.replace('upload', 'preview');
                const progressId = this.id.replace('upload', 'progress');
                const successId = this.id.replace('upload', 'success');
                const previewContainer = document.getElementById(previewId);
                const progressBar = document.getElementById(progressId);
                const progressFill = progressBar.querySelector('.progress-fill');
                const successMessage = document.getElementById(successId);
                
                // Show progress bar
                progressBar.style.display = 'block';
                progressFill.style.width = '0%';
                
                // Simulate upload progress
                let progress = 0;
                const progressInterval = setInterval(() => {
                    progress += Math.random() * 10;
                    if (progress >= 100) {
                        progress = 100;
                        clearInterval(progressInterval);
                        
                        // Hide progress bar and show success after a delay
                        setTimeout(() => {
                            progressBar.style.display = 'none';
                            successMessage.style.display = 'block';
                            
                            // Hide success message after 3 seconds
                            setTimeout(() => {
                                successMessage.style.display = 'none';
                            }, 3000);
                        }, 300);
                    }
                    progressFill.style.width = `${progress}%`;
                }, 150);
                
                // Clear previous preview
                previewContainer.innerHTML = '';
                
                // Create preview element
                const previewBox = document.createElement('div');
                previewBox.className = 'preview-box';
                
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.className = 'preview-image';
                        previewBox.appendChild(img);
                        
                        const overlay = document.createElement('div');
                        overlay.className = 'edit-overlay';
                        overlay.innerHTML = '<i class="fas fa-edit"></i> Edit';
                        overlay.addEventListener('click', (e) => {
                            e.stopPropagation();
                            input.click();
                        });
                        previewBox.appendChild(overlay);
                        
                        previewContainer.appendChild(previewBox);
                        
                        // Animate preview appearance
                        previewBox.style.opacity = '0';
                        previewBox.style.transform = 'translateY(10px)';
                        setTimeout(() => {
                            previewBox.style.opacity = '1';
                            previewBox.style.transform = 'translateY(0)';
                            previewBox.style.transition = 'all 0.4s ease-out';
                        }, 50);
                    };
                    reader.readAsDataURL(file);
                } else if (file.type === 'application/pdf') {
                    previewBox.innerHTML = `
                        <div style="height:200px; display:flex; flex-direction:column; align-items:center; justify-content:center; background:#f1f5f9;">
                            <i class="fas fa-file-pdf" style="font-size:3rem; color:#ef4444;"></i>
                            <div style="margin-top:10px;">${file.name}</div>
                        </div>
                        <div class="edit-overlay"><i class="fas fa-edit"></i> Edit</div>
                    `;
                    previewBox.querySelector('.edit-overlay').addEventListener('click', (e) => {
                        e.stopPropagation();
                        input.click();
                    });
                    previewContainer.appendChild(previewBox);
                    
                    // Animate preview appearance
                    previewBox.style.opacity = '0';
                    previewBox.style.transform = 'translateY(10px)';
                    setTimeout(() => {
                        previewBox.style.opacity = '1';
                        previewBox.style.transform = 'translateY(0)';
                        previewBox.style.transition = 'all 0.4s ease-out';
                    }, 50);
                }
            });
        });
        
        // Make upload areas clickable
        document.querySelectorAll('.upload-area').forEach(area => {
            area.addEventListener('click', function(e) {
                if (e.target.tagName !== 'INPUT') {
                    const inputId = this.id.replace('-area', '');
                    document.getElementById(inputId).click();
                }
            });
        });
        
        // Back button functionality
        document.getElementById('backButton').addEventListener('click', function() {
            // Add animation when going back
            document.querySelector('.verification-container').style.animation = 'fadeIn 0.4s reverse forwards';
            setTimeout(() => {
                console.log('Going back to previous page');
                window.history.back();
            }, 300);
        });
        
        // Exit button functionality
        document.getElementById('exitButton').addEventListener('click', function() {
            // Confirm before exiting with a nice animation
            this.style.transform = 'scale(0.95)';
            setTimeout(() => {
                this.style.transform = 'scale(1)';
                if (confirm('Are you sure you want to exit? Any unsaved changes will be lost.')) {
                    console.log('Exiting verification form');
                    // Animate container out before redirecting
                    document.querySelector('.verification-container').style.animation = 'fadeIn 0.4s reverse forwards';
                    setTimeout(() => {
                        window.location.href = 'dashboard.html';
                    }, 300);
                }
            }, 150);
        });
        
        // Submit button functionality
        document.getElementById('submitButton').addEventListener('click', function() {
            // Add button press animation
            this.style.transform = 'scale(0.95)';
            setTimeout(() => {
                this.style.transform = 'scale(1)';
                
                // Form validation would go here
                console.log('Submitting verification form');
                
                // Simulate form submission with loading state
                const originalText = this.innerHTML;
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
                this.disabled = true;
                
                // Simulate API call delay
                setTimeout(() => {
                    this.innerHTML = originalText;
                    this.disabled = false;
                    
                    // Show success message
                    alert('Verification submitted successfully!');
                    
                    // In a real app, this would redirect or show a success message
                    // document.querySelector('.verification-container').style.animation = 'fadeIn 0.4s reverse forwards';
                    // setTimeout(() => {
                    //     window.location.href = 'success-page.html';
                    // }, 300);
                }, 2000);
            }, 150);
        });
    </script>
</body>
</html>